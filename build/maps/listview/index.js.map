{"version":3,"sources":["listview/index.js"],"names":["cloneDeep","Aotoo","merge","Fox","require","TmpApp","props","_dealWithData","listMethod","lmd","that","ReactDom","findDOMNode","store","data","stateData","listClass","onscrollend","items","map","item","ii","idf","key","itemMethod","listOperate","length","fills","_cls","sty","listStyle","header","footer","children","ulclass","fill","React","cloneElement","className","style","Component","module","exports"],"mappings":"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","file":"../../listview/index.js","sourcesContent":["/**\n* list 通用组件\n* 返回 div > (ul > li)*n\n*/\nconst cloneDeep = Aotoo.cloneDeep\nconst merge = Aotoo.merge\nconst Fox = require('../itemview/foxli')\n\nclass TmpApp extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis._dealWithData = this::this._dealWithData\n\t\t// this._dealWithItemView = this::this._dealWithItemView\n\t\tthis.listMethod = this::this.listMethod\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.listMethod(this.props.listMethod)\n\t}\n\n\tlistMethod(lmd){\n\t\tif (lmd && typeof lmd == 'function') {\n\t\t\tlet that = ReactDom.findDOMNode(this);\n\t\t\tlmd(that, this.props.store)\n\t\t}\n\t}\n\n\t// _dealWithItemView(index, item, props={}){\n\t// \tconst listOperate = {\n\t// \t\t// parent: this.getListDom\n\t// \t}\n\n\t// \tif (item.itemMethod) {\n\t// \t\tprops.itemMethod = item.itemMethod || props.itemMethod\n\t// \t\tdelete item.itemMethod\n\t// \t}\n\t// \treturn <Fox foxref={\"child_\"+index} operate={listOperate} idf={index} {...props} />;\n\t// }\n\n\t_dealWithData(data){\n\t\tvar props = merge({}, this.props);\n\t\tconst stateData = props.data\n\n\t\t//删除多余的属性\n\t\tdelete props.listClass;\n\t\tdelete props.listMethod;\n\t\tdelete props.onscrollend;\n\t\tdelete props.data\n\t\t\n\t\tconst items = stateData.map(\n\t\t\t(item, ii) => {\n\t\t\t\tprops.idf = ii\n\t\t\t\tprops.key = 'fox'+ii\n\t\t\t\tprops.data = item\n\t\t\t\tif (item.itemMethod) {\n\t\t\t\t\tprops.itemMethod = item.itemMethod\n\t\t\t\t\tdelete item.itemMethod\n\t\t\t\t}\n\t\t\t\tconst listOperate = {} //{ // parent: this.getListDom }\n\t\t\t\treturn <Fox foxref={\"child_\"+ii} operate={listOperate} idf={ii} {...props} />;\n\t\t\t}\n\t\t)\n\t\treturn items.length ? <ul className=\"hlist\"> {items} </ul> : ''\n\t}\n\n\trender(){\n\t\tlet fills = this._dealWithData()\n\t\tlet _cls = 'list-wrap'\n\t\tlet sty\n\t\tif(this.props.listClass){\n\t\t\t_cls = \"list-wrap \" + this.props.listClass||''\n\t\t}\n\t\tif(this.props.listStyle){\n\t\t\tsty = this.props.listStyle;\n\t\t}\n\t\tif (this.props.header || this.props.footer || this.props.children) {\n\t\t\treturn (\n\t\t\t\t<div className={_cls} style={sty}>\n\t\t\t\t\t{this.props.header}\n\t\t\t\t\t{fills}\n\t\t\t\t\t{this.props.footer}\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\tconst ulclass = `hlist ${this.props.listClass||''}`\n\t\t\tif (fills) {\n\t\t\t\tconst fill = fills\n\t\t\t\treturn React.cloneElement(fill, {className: ulclass, style: sty})\n\t\t\t} else {\n\t\t\t\treturn <ul className={ulclass}></ul>\n\t\t\t}\n\n\t\t}\n\t}\n}\n\n\n// class TmpApp extends React.Component {\n// \tconstructor(props){\n// \t\tsuper(props)\n// \t\tvar pdata = this.props.data;\n// \t\tif( pdata ){ if(!Array.isArray( pdata )){ pdata = [ pdata ] } }\n// \t\tthis.selected = []\n// \t\tthis.state = {\n// \t\t\tdata: pdata||[]\n// \t\t}\n//\n// \t\tthis._dealWithData = this::this._dealWithData\n// \t\tthis._dealWithItemView = this::this._dealWithItemView\n// \t\tthis.listMethod = this::this.listMethod\n// \t\tthis.getListDom = this::this.getListDom\n// \t}\n//\n// \tshouldComponentUpdate(nextProps, nextState) {\n//     return true\n// \t}\n//\n// \tcomponentWillMount() {\n//\n// \t}\n//\n// \tgetListDom(){\n// \t\treturn reactDom.findDOMNode(this);\n// \t}\n//\n// \tcomponentWillReceiveProps(nextProps) {\n// \t\tvar pdata = nextProps.data;\n// \t\tif (pdata) {\n// \t\t\tif(!Array.isArray( pdata )) pdata = [ pdata ]\n// \t\t\tthis.setState({ data: pdata })\n// \t\t}\n// \t}\n//\n// \tcomponentDidMount(){\n// \t\tthis.listMethod(this.props.listMethod)\n// \t}\n//\n// \tlistMethod(lmd){\n// \t\tif (lmd && typeof lmd == 'function') {\n// \t\t\tlet that = reactDom.findDOMNode(this);\n// \t\t\tlmd(that, this.props.store)\n// \t\t}\n// \t}\n//\n// \t_dealWithItemView(opts){\n// \t\tvar that = this;\n// \t\tvar props = cloneDeep(that.props);\n// \t\tprops.idf = opts.i;\n// \t\tprops.key = 'fox'+opts.i;\n// \t\tprops.data = opts.item;\n//\n// \t\tconst listOperate = {\n// \t\t\tparent: this.getListDom\n// \t\t}\n//\n// \t\t//删除多余的属性\n// \t\tdelete props.listClass;\n// \t\tdelete props.listMethod;\n// \t\tdelete props.itemView;\n// \t\tdelete props.onscrollend;\n//\n// \t\tif(that.props.itemView){\n// \t\t\tvar view = that.props.itemView;\n// \t\t\treturn React.createElement(view, props, that.props.children);\n// \t\t}else{\n// \t\t\treturn <Fox ref={\"child_\"+opts.i} operate={listOperate} idf={opts.i} {...props} data={opts.item} />;\n// \t\t}\n// \t}\n//\n// \t_dealWithData(data){\n// \t\tconst stateData = this.state.data\n// \t\tconst items = stateData.map((item, ii) => this._dealWithItemView({i: ii, item: item}))\n// \t\treturn items.length ? <ul className=\"hlist\"> {items} </ul> : ''\n// \t}\n//\n// \trender(){\n// \t\tlet fills = this._dealWithData()\n// \t\tlet _cls = 'list-wrap'\n// \t\tlet sty\n// \t\tif(this.props.listClass){\n// \t\t\t_cls = \"list-wrap \" + this.props.listClass||''\n// \t\t}\n// \t\tif(this.props.listStyle){\n// \t\t\tsty = this.props.listStyle;\n// \t\t}\n// \t\tif (this.props.header || this.props.footer || this.props.children) {\n// \t\t\treturn (\n// \t\t\t\t<div className={_cls} style={sty}>\n// \t\t\t\t\t{this.props.header}\n// \t\t\t\t\t{fills}\n// \t\t\t\t\t{this.props.footer}\n// \t\t\t\t\t{this.props.children}\n// \t\t\t\t</div>\n// \t\t\t)\n// \t\t} else {\n// \t\t\tif (fills) {\n// \t\t\t\tconst fill = fills\n// \t\t\t\tconst ulclass = `hlist ${this.props.listClass||''}`\n// \t\t\t\treturn React.cloneElement(fill, {className: ulclass})\n// \t\t\t} else {\n// \t\t\t\treturn <ul className=\"hlist\"></ul>\n// \t\t\t}\n//\n// \t\t}\n// \t}\n//\n// }\n\nmodule.exports = TmpApp;\n"]}