{"version":3,"sources":["listview/index.js"],"names":["cloneDeep","Aotoo","Fox","require","TmpApp","props","_dealWithData","_dealWithItemView","listMethod","lmd","that","ReactDom","findDOMNode","store","opts","idf","i","key","data","item","listOperate","listClass","onscrollend","itemMethod","stateData","items","map","ii","length","fills","_cls","sty","listStyle","header","footer","children","ulclass","fill","React","cloneElement","className","style","Component","module","exports"],"mappings":"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","file":"../../listview/index.js","sourcesContent":["/**\n* list 通用组件\n* 返回 div > (ul > li)*n\n*/\nconst cloneDeep = Aotoo.cloneDeep\nconst Fox = require('../itemview/foxli')\n\nclass TmpApp extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis._dealWithData = this::this._dealWithData\n\t\tthis._dealWithItemView = this::this._dealWithItemView\n\t\tthis.listMethod = this::this.listMethod\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.listMethod(this.props.listMethod)\n\t}\n\n\tlistMethod(lmd){\n\t\tif (lmd && typeof lmd == 'function') {\n\t\t\tlet that = ReactDom.findDOMNode(this);\n\t\t\tlmd(that, this.props.store)\n\t\t}\n\t}\n\n\t_dealWithItemView(opts){\n\t\tvar that = this;\n\t\tvar props = cloneDeep(that.props);\n\t\tprops.idf = opts.i;\n\t\tprops.key = 'fox'+opts.i;\n\t\tprops.data = opts.item;\n\n\t\tconst listOperate = {\n\t\t\t// parent: this.getListDom\n\t\t}\n\n\t\t//删除多余的属性\n\t\tdelete props.listClass;\n\t\tdelete props.listMethod;\n\t\tdelete props.onscrollend;\n\n\t\tif (opts.item.itemMethod) {\n\t\t\tprops.itemMethod = opts.item.itemMethod || props.itemMethod\n\t\t\tdelete opts.item.itemMethod\n\t\t}\n\t\treturn <Fox foxref={\"child_\"+opts.i} operate={listOperate} idf={opts.i} {...props} data={opts.item} />;\n\t}\n\n\t_dealWithData(data){\n\t\tconst stateData = this.props.data\n\t\tconst items = stateData.map((item, ii) => this._dealWithItemView({i: ii, item: item}))\n\t\treturn items.length ? <ul className=\"hlist\"> {items} </ul> : ''\n\t}\n\n\trender(){\n\t\tlet fills = this._dealWithData()\n\t\tlet _cls = 'list-wrap'\n\t\tlet sty\n\t\tif(this.props.listClass){\n\t\t\t_cls = \"list-wrap \" + this.props.listClass||''\n\t\t}\n\t\tif(this.props.listStyle){\n\t\t\tsty = this.props.listStyle;\n\t\t}\n\t\tif (this.props.header || this.props.footer || this.props.children) {\n\t\t\treturn (\n\t\t\t\t<div className={_cls} style={sty}>\n\t\t\t\t\t{this.props.header}\n\t\t\t\t\t{fills}\n\t\t\t\t\t{this.props.footer}\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\tconst ulclass = `hlist ${this.props.listClass||''}`\n\t\t\tif (fills) {\n\t\t\t\tconst fill = fills\n\t\t\t\treturn React.cloneElement(fill, {className: ulclass, style: sty})\n\t\t\t} else {\n\t\t\t\treturn <ul className={ulclass}></ul>\n\t\t\t}\n\n\t\t}\n\t}\n}\n\n\n// class TmpApp extends React.Component {\n// \tconstructor(props){\n// \t\tsuper(props)\n// \t\tvar pdata = this.props.data;\n// \t\tif( pdata ){ if(!Array.isArray( pdata )){ pdata = [ pdata ] } }\n// \t\tthis.selected = []\n// \t\tthis.state = {\n// \t\t\tdata: pdata||[]\n// \t\t}\n//\n// \t\tthis._dealWithData = this::this._dealWithData\n// \t\tthis._dealWithItemView = this::this._dealWithItemView\n// \t\tthis.listMethod = this::this.listMethod\n// \t\tthis.getListDom = this::this.getListDom\n// \t}\n//\n// \tshouldComponentUpdate(nextProps, nextState) {\n//     return true\n// \t}\n//\n// \tcomponentWillMount() {\n//\n// \t}\n//\n// \tgetListDom(){\n// \t\treturn reactDom.findDOMNode(this);\n// \t}\n//\n// \tcomponentWillReceiveProps(nextProps) {\n// \t\tvar pdata = nextProps.data;\n// \t\tif (pdata) {\n// \t\t\tif(!Array.isArray( pdata )) pdata = [ pdata ]\n// \t\t\tthis.setState({ data: pdata })\n// \t\t}\n// \t}\n//\n// \tcomponentDidMount(){\n// \t\tthis.listMethod(this.props.listMethod)\n// \t}\n//\n// \tlistMethod(lmd){\n// \t\tif (lmd && typeof lmd == 'function') {\n// \t\t\tlet that = reactDom.findDOMNode(this);\n// \t\t\tlmd(that, this.props.store)\n// \t\t}\n// \t}\n//\n// \t_dealWithItemView(opts){\n// \t\tvar that = this;\n// \t\tvar props = cloneDeep(that.props);\n// \t\tprops.idf = opts.i;\n// \t\tprops.key = 'fox'+opts.i;\n// \t\tprops.data = opts.item;\n//\n// \t\tconst listOperate = {\n// \t\t\tparent: this.getListDom\n// \t\t}\n//\n// \t\t//删除多余的属性\n// \t\tdelete props.listClass;\n// \t\tdelete props.listMethod;\n// \t\tdelete props.itemView;\n// \t\tdelete props.onscrollend;\n//\n// \t\tif(that.props.itemView){\n// \t\t\tvar view = that.props.itemView;\n// \t\t\treturn React.createElement(view, props, that.props.children);\n// \t\t}else{\n// \t\t\treturn <Fox ref={\"child_\"+opts.i} operate={listOperate} idf={opts.i} {...props} data={opts.item} />;\n// \t\t}\n// \t}\n//\n// \t_dealWithData(data){\n// \t\tconst stateData = this.state.data\n// \t\tconst items = stateData.map((item, ii) => this._dealWithItemView({i: ii, item: item}))\n// \t\treturn items.length ? <ul className=\"hlist\"> {items} </ul> : ''\n// \t}\n//\n// \trender(){\n// \t\tlet fills = this._dealWithData()\n// \t\tlet _cls = 'list-wrap'\n// \t\tlet sty\n// \t\tif(this.props.listClass){\n// \t\t\t_cls = \"list-wrap \" + this.props.listClass||''\n// \t\t}\n// \t\tif(this.props.listStyle){\n// \t\t\tsty = this.props.listStyle;\n// \t\t}\n// \t\tif (this.props.header || this.props.footer || this.props.children) {\n// \t\t\treturn (\n// \t\t\t\t<div className={_cls} style={sty}>\n// \t\t\t\t\t{this.props.header}\n// \t\t\t\t\t{fills}\n// \t\t\t\t\t{this.props.footer}\n// \t\t\t\t\t{this.props.children}\n// \t\t\t\t</div>\n// \t\t\t)\n// \t\t} else {\n// \t\t\tif (fills) {\n// \t\t\t\tconst fill = fills\n// \t\t\t\tconst ulclass = `hlist ${this.props.listClass||''}`\n// \t\t\t\treturn React.cloneElement(fill, {className: ulclass})\n// \t\t\t} else {\n// \t\t\t\treturn <ul className=\"hlist\"></ul>\n// \t\t\t}\n//\n// \t\t}\n// \t}\n//\n// }\n\nmodule.exports = TmpApp;\n"]}