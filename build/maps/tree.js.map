{"version":3,"sources":["tree.js"],"names":["filter","Aotoo","idrecode","subTree","item","dataAry","deep","nsons","sons","o","parent","idf","forEach","son","ii","itemClass","indexOf","push","concat","length","li","owerTree","ary","Array","isArray","module","exports","menus","title","attr","_tmp"],"mappings":"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","file":"../tree.js","sourcesContent":["// 数据结构\n// const _data = [\n//   {title: '典型页面', content: '123', idf: 'aaa'},\n//   {title: '典型页面1', content: 'aaa', idf: 'bbb', parent: 'aaa'},\n//   {title: '典型页面2', content: 'bbb', parent: 'aaa', attr: {\"href\":'http://www.163.com'}},\n//   {title: '典型页面3', content: 'ccc', parent: 'aaa'},\n//   {title: '典型页面4', content: 'ddd', parent: 'bbb'},\n//   {title: '典型页面5', content: 'eee', parent: 'bbb'},\n//   {title: '导航', content: '111'},\n//   {title: '表单', content: '333'},\n//   {title: '列表', content: '444'},\n//   {title: '高级搜索', content: '5555'}\n// ]\n\n// resault\n// [\n//   {title: '典型页面', url: undefined, li: [{title: '典型页面1', url: undefined, li:[{典型页面4..}, {典型页面5..}]}, {典型页面2..}, {典型页面3...}]},\n//   {title: '导航', content: '111'},\n//   {title: '表单', content: '333'},\n//   {title: '列表', content: '444'},\n//   {title: '高级搜索', content: '5555'}\n// ]\n\n// html\n// 将结果交给widget/ListView组件,拼接 ul/li 的结构化数据\n// <List data={resault} />\n\n// <li class=\"item ...\">\n// \t<div class=\"itemroot\">\n// \t\t<ul>\n// \t\t\t<li data-href=\"http://www.163.com\">xxx</li>\n// \t\t</ul>\n// \t</div>\n// </li>\n\n// let idrecode = {}\n\nconst filter = Aotoo.filter\nlet idrecode = []\nfunction subTree(item, dataAry, deep){\n\tdeep = deep||1\n\tlet nsons = []\n\tlet sons = filter(dataAry, o => o.parent == item.idf)\n\tsons.forEach( (son, ii) => {\n\t\t// son.itemClass = son.itemClass&&son.itemClass.indexOf('level'+deep)==-1 ? son.itemClass +' level'+deep : son.itemClass\n\t\tson.itemClass = son.itemClass ? son.itemClass.indexOf('level' + deep) == -1 ? son.itemClass + ' level' + deep : son.itemClass : 'level'+deep\n\t\t// son.itemClass = son.itemClass ? son.itemClass +' level'+deep : 'level'+deep\n\t\tif (son.idf && idrecode.indexOf(son.idf) == -1) {\n\t\t\tidrecode.push(son.idf)\n\t\t\tnsons = nsons.concat([subTree(son, dataAry, ++deep)])\n\t\t\t--deep\n\t\t} else {\n\t\t\tnsons = nsons.concat(son)\n\t\t}\n\t})\n\tif (nsons.length) {\n\t\titem.li = nsons\n\t}\n\treturn item\n}\n\nfunction owerTree(item) {\n\tconst ary = []\n\titem.forEach( o => {\n\t\tif (Array.isArray(o)) return owerTree(item)\n\t\tary.push(o)\n\t})\n\tif (ary.length) {\n\t\treturn {li: ary}\n\t}\n}\n\n// TreeStructor\nmodule.exports = function(dataAry){\n\tlet menus = []\n\tidrecode = []\n\tdataAry.forEach( (item, ii)=>{\n\t\tif (typeof item == 'string') menus.push(item)\n\t\tif (typeof item == 'object' && !Array.isArray(item)) {\n\t\t// if (_.isPlainObject(item)) {\n\t\t\tif (item['attr']) {\n\t\t\t\titem['attr']['data-treeid'] = ii\n\t\t\t\t// if (!item['attr']['data-treeid']) item['attr']['data-treeid'] = ii\n\t\t\t} else {\n\t\t\t\tif (item['$$typeof']) {\n\t\t\t\t\titem = {title: item, attr: {'treeid': ii}}\n\t\t\t\t} else {\n\t\t\t\t\titem['attr'] ={'data-treeid': ii}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (item.idf && !item.parent && idrecode.indexOf(item.idf) == -1) {\n\t\t\t\t// item.itemClass = item.itemClass && item.itemClass.indexOf('level0') == -1 ? item.itemClass +' level0' : item.itemClass\n\t\t\t\titem.itemClass = item.itemClass ? item.itemClass.indexOf('level0') == -1 ? item.itemClass + ' level0' : item.itemClass : 'level0'\n\t\t\t\t// item.ref = item.idf\n\t\t\t\tmenus.push(subTree(item, dataAry))\n\t\t\t}\n\t\t\tif (!item.idf && !item.parent) {\n\t\t\t\tmenus.push(item)\n\t\t\t}\n\t\t}\n\t\tif (Array.isArray(item)) {\n\t\t\tvar _tmp = owerTree(item)\n\t\t\tif (_tmp) {\n\t\t\t\tmenus.push(_tmp)\n\t\t\t}\n\t\t}\n\t})\n\treturn menus\n}\n"]}